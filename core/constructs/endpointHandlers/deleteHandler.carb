class Websom.DeleteHandler inherits Websom.SelectHandler {
	override void fulfill(Websom.CollectionInterfaceRoute cir, Websom.Request req) {
		let filterName = req.body["filter"];
		if (filterName.typeAsString() != "string") {
			filterName = "default";
		}

		let filter = cir.findFilter(filterName);
		
		if (filter == null) {
			req.endWithError("Unknown filter provided");

			return null;
		}

		let collection = cir.collection.collection;

		if (cir.validateTouchesHandler != null) {
			let vQuery = collection.select();
			let out2 = this.buildQuery(cir, filter, req, vQuery);

			if (out2 == null)
				return null;

			let sresults = vQuery.get();

			let tempCtx = new Websom.APIContext(req);
			tempCtx.type = "delete";

			for (let int i in sresults.documents) {
				let doc = sresults.documents[i];
				native javascript {
					if (!await cir.validateTouchesHandler(tempCtx, doc)) {
						req.endWithError("Invalid query");
						return null;
					}
				}

				native php {
					if (!$cir->validateTouchesHandler($tempCtx, $doc)) {
						$req->endWithError("Invalid query");
						return null;
					}
				}
			}
		}

		let query = collection.delete();

		let out = this.buildQuery(cir, filter, req, query);

		if (out == null)
			return null;

		let deleteResults = query.run();

		cir.trigger("success", req, deleteResults.documents);

		req.endWithSuccess("Deleted");
	}
}